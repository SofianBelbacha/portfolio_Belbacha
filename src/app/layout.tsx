// app/layout.tsx
import "./globals.css";
import { Inter } from "next/font/google"; // Import de la police
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Header from "./_components/layout/header";
import Footer from "./_components/layout/footer";
import Contact from "./_components/layout/contact";
import { ReactNode } from "react";
import { AnalyticsProvider } from '@/app/_components/providers/AnalyticsProvider';
import { Toaster } from "@/app/_components/ui/sonner";
import { Analytics } from "@vercel/analytics/react"
import Script from "next/script"


const inter = Inter({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"], // Définir les poids
  variable: "--font-inter", // Définir une variable CSS pour la police
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: ReactNode }) {

  return (
    <html lang="fr" className={`dark ${inter.variable} ${geistSans.variable} ${geistMono.variable}`}>
      <head>
      <link rel="stylesheet" type='text/css' href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css" />
          {/* Google Tag (gtag.js) - Chargé uniquement en production */}
          {process.env.NODE_ENV === 'production' && process.env.NEXT_PUBLIC_GA_ID && (
          <>
            <Script async src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GA_ID}`} />
            <Script
              dangerouslySetInnerHTML={{
                __html: `
                  window.dataLayer = window.dataLayer || [];
                  function gtag(){dataLayer.push(arguments);}
                  gtag('js', new Date());
                  gtag('config', '${process.env.NEXT_PUBLIC_GA_ID}');
                `,
              }}
            />
          </>
        )}
      </head>
      <body className="bg-black text-white">
        <AnalyticsProvider />
        <Header />
        <main>{children}</main>
        <Toaster richColors />
        <Contact />
        <Footer />
        <div className="pointer-events-none fixed bottom-0 left-0 right-0 h-[100px] z-10 bg-gradient-to-b from-[rgba(5,5,5,0)] to-black opacity-100">
        </div>
        <Analytics />
      </body>
    </html>
  );
}
